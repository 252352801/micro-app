body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

/*
:global(.ocssContainer) {
  @media (max-width: 575px){}
  .abc {
    color: red;
  }
}
*/

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

:root {
  --color-a: yellow;
  --color-b: red;
  --padding-50: 50px;
  --opacity: 0.5;
}

@keyframes mymove {
  from { top: 0px; }
  to { top: 200px; }
}
@media screen and (max-width: 300px) {
  body {
      background-color:lightblue;
  }
}

@supports (display: grid) {
  .test-grid {
    display: grid;
  }
}
@supports (display: -webkit-flex) or
        (display: -moz-flex) or
        (display: flex) {

  .test-supports {
    display: -webkit-flex;
    display: -moz-flex;
    display: flex;
    float: none;
  }
}

.test-back-var {
  background-color: rgb(255 255 255 / var(--opacity));;;;
}

/* @layer规则 */
@layer theme, layout, utilities;

.test-layer {
  background-color: red;
}

@layer utilities {
  .padding-sm {
    padding: 0.5rem;
  }

  .padding-lg {
    padding: 0.8rem;
  }
}

@layer framework {
  @layer layout {
    .test-layer {
      .test-layer-nest {
        color: red;
      }
    }
  }
}

// 错误1
.basic-layout-side-menu{.ant-menu-item-group{&:last-child{border-bottom:none!important}}}

// 错误2
.chat-message-markdown-wrap{table{width:100%!important;border:1px solid #ccc}table td,table th{border-bottom:1px solid #ccc;border-right:1px solid #ccc;padding:5px 10px}table th{text-align:center;background:#dee8ee}table th:last-child{border-right:none}table td:last-child{border-right:none}table tr:last-child td{border-bottom:none}tr:nth-child(2n){background:#eff3f5}blockquote{display:block;border-left:8px solid #d0e5f2;padding:5px 10px;margin:10px 0;line-height:1.4;font-size:100%;background-color:#f1f1f1}ul,ol{margin:10px 0 10px 20px}}

.nest-a {
  .nest-b {
    .nest-c {
      color: red;
    }
  }
}

/* Selects any paragraph inside a header, main or footer element that is being hovered */
:where(header, main, footer) p:hover {
  color: red;
  cursor: pointer;
}

/* The above is equivalent to the following */
header p:hover,
main p:hover,
footer p:hover {
  color: red;
  cursor: pointer;
}

:is( section.is-styling,aside.is-styling, footer.is-styling) a, .b, .c:nth-child(3) {
  color: red;
}

:where(section.where-styling, aside.where-styling,  footer.where-styling) a {
  color: orange;
}

footer a {
  color: blue;
}

input:checked + label {
  color: red;
}

:current(p, span) {
  background-color: yellow;
}

simple-custom:not(:defined) {
  display: none;
}

:dir(ltr) {
  background-color: yellow;
}

:dir(rtl) {
  background-color: red;
}
section {
  display: flex;
  align-items: start;
  justify-content: space-around;
}

article {
  display: inline-block;
  width: 40%;
}

h1 {
  font-size: 1.2em;
}

h2 {
  font-size: 1em;
  color: rgb(150 149 149);
}

h3 {
  font-size: 0.9em;
  color: darkgrey;
}

h1,
h2,
h3 {
  margin: 0 0 1rem 0;
}

:is(h1, h2, h3):has(+ :is(h2, h3, h4)) {
  color: blue;
  margin: 0 0 0.25rem 0;
}

:is(h1, h2, h3):has(+ h2, + h3, + h4) {
  color: green;
  margin: 0 0 0.25rem 0;
}

body :not(div, .fancy) {
  text-decoration: overline underline;
}

.a .b, .c, .d, ul li:nth-child(3) { color: red; }
